// Code generated by protoc-gen-go. DO NOT EDIT.
// source: external-loadbalancer.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data struct {
	FarmName             string   `protobuf:"bytes,1,opt,name=FarmName,proto3" json:"FarmName,omitempty"`
	Ports                []*Port  `protobuf:"bytes,2,rep,name=Ports,proto3" json:"Ports,omitempty"`
	Nodes                []string `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_loadbalancer_0faebc9910084f66, []int{0}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (dst *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(dst, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetFarmName() string {
	if m != nil {
		return m.FarmName
	}
	return ""
}

func (m *Data) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Data) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Port struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Port                 int32    `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	NodePort             int32    `protobuf:"varint,3,opt,name=NodePort,proto3" json:"NodePort,omitempty"`
	Protocol             string   `protobuf:"bytes,4,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_loadbalancer_0faebc9910084f66, []int{1}
}
func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (dst *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(dst, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Port) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Port) GetNodePort() int32 {
	if m != nil {
		return m.NodePort
	}
	return 0
}

func (m *Port) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type Result struct {
	FarmAddress          string   `protobuf:"bytes,1,opt,name=FarmAddress,proto3" json:"FarmAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_loadbalancer_0faebc9910084f66, []int{2}
}
func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (dst *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(dst, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetFarmAddress() string {
	if m != nil {
		return m.FarmAddress
	}
	return ""
}

type Nodes struct {
	List                 []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Nodes) Reset()         { *m = Nodes{} }
func (m *Nodes) String() string { return proto.CompactTextString(m) }
func (*Nodes) ProtoMessage()    {}
func (*Nodes) Descriptor() ([]byte, []int) {
	return fileDescriptor_external_loadbalancer_0faebc9910084f66, []int{3}
}
func (m *Nodes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Nodes.Unmarshal(m, b)
}
func (m *Nodes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Nodes.Marshal(b, m, deterministic)
}
func (dst *Nodes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Nodes.Merge(dst, src)
}
func (m *Nodes) XXX_Size() int {
	return xxx_messageInfo_Nodes.Size(m)
}
func (m *Nodes) XXX_DiscardUnknown() {
	xxx_messageInfo_Nodes.DiscardUnknown(m)
}

var xxx_messageInfo_Nodes proto.InternalMessageInfo

func (m *Nodes) GetList() []string {
	if m != nil {
		return m.List
	}
	return nil
}

func init() {
	proto.RegisterType((*Data)(nil), "grpc.Data")
	proto.RegisterType((*Port)(nil), "grpc.Port")
	proto.RegisterType((*Result)(nil), "grpc.Result")
	proto.RegisterType((*Nodes)(nil), "grpc.Nodes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExternalLoadBalancerClient is the client API for ExternalLoadBalancer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExternalLoadBalancerClient interface {
	Create(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Result, error)
	Update(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Result, error)
	Delete(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Result, error)
	NodesChange(ctx context.Context, in *Nodes, opts ...grpc.CallOption) (*Result, error)
}

type externalLoadBalancerClient struct {
	cc *grpc.ClientConn
}

func NewExternalLoadBalancerClient(cc *grpc.ClientConn) ExternalLoadBalancerClient {
	return &externalLoadBalancerClient{cc}
}

func (c *externalLoadBalancerClient) Create(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/grpc.ExternalLoadBalancer/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalLoadBalancerClient) Update(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/grpc.ExternalLoadBalancer/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalLoadBalancerClient) Delete(ctx context.Context, in *Data, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/grpc.ExternalLoadBalancer/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *externalLoadBalancerClient) NodesChange(ctx context.Context, in *Nodes, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/grpc.ExternalLoadBalancer/NodesChange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExternalLoadBalancerServer is the server API for ExternalLoadBalancer service.
type ExternalLoadBalancerServer interface {
	Create(context.Context, *Data) (*Result, error)
	Update(context.Context, *Data) (*Result, error)
	Delete(context.Context, *Data) (*Result, error)
	NodesChange(context.Context, *Nodes) (*Result, error)
}

func RegisterExternalLoadBalancerServer(s *grpc.Server, srv ExternalLoadBalancerServer) {
	s.RegisterService(&_ExternalLoadBalancer_serviceDesc, srv)
}

func _ExternalLoadBalancer_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalLoadBalancerServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ExternalLoadBalancer/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalLoadBalancerServer).Create(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalLoadBalancer_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalLoadBalancerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ExternalLoadBalancer/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalLoadBalancerServer).Update(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalLoadBalancer_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Data)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalLoadBalancerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ExternalLoadBalancer/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalLoadBalancerServer).Delete(ctx, req.(*Data))
	}
	return interceptor(ctx, in, info, handler)
}

func _ExternalLoadBalancer_NodesChange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Nodes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExternalLoadBalancerServer).NodesChange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.ExternalLoadBalancer/NodesChange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExternalLoadBalancerServer).NodesChange(ctx, req.(*Nodes))
	}
	return interceptor(ctx, in, info, handler)
}

var _ExternalLoadBalancer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.ExternalLoadBalancer",
	HandlerType: (*ExternalLoadBalancerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ExternalLoadBalancer_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ExternalLoadBalancer_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ExternalLoadBalancer_Delete_Handler,
		},
		{
			MethodName: "NodesChange",
			Handler:    _ExternalLoadBalancer_NodesChange_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "external-loadbalancer.proto",
}

func init() {
	proto.RegisterFile("external-loadbalancer.proto", fileDescriptor_external_loadbalancer_0faebc9910084f66)
}

var fileDescriptor_external_loadbalancer_0faebc9910084f66 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xbf, 0x4e, 0xfb, 0x30,
	0x10, 0xfe, 0xa5, 0x49, 0xaa, 0xf6, 0xf2, 0x9b, 0xac, 0x0e, 0x56, 0xba, 0x58, 0x11, 0x43, 0x54,
	0x89, 0x0c, 0xe5, 0x09, 0xa0, 0x85, 0x09, 0x55, 0x55, 0x24, 0x16, 0x36, 0x37, 0x3e, 0x0a, 0x92,
	0x1b, 0x47, 0xb6, 0x91, 0x78, 0x30, 0x1e, 0x10, 0x9d, 0x1d, 0xaa, 0x8a, 0x05, 0xb6, 0xfb, 0xfe,
	0xe4, 0xee, 0xcb, 0x67, 0x58, 0xe2, 0x87, 0x47, 0xdb, 0x4b, 0x7d, 0xad, 0x8d, 0x54, 0x07, 0xa9,
	0x65, 0xdf, 0xa1, 0x6d, 0x06, 0x6b, 0xbc, 0x61, 0xd9, 0xd1, 0x0e, 0x5d, 0xf5, 0x0c, 0xd9, 0x56,
	0x7a, 0xc9, 0x4a, 0x98, 0x3d, 0x48, 0x7b, 0xda, 0xc9, 0x13, 0xf2, 0x44, 0x24, 0xf5, 0xbc, 0x3d,
	0x63, 0x26, 0x20, 0xdf, 0x1b, 0xeb, 0x1d, 0x9f, 0x88, 0xb4, 0x2e, 0xd6, 0xd0, 0xd0, 0x97, 0x0d,
	0x51, 0x6d, 0x14, 0xd8, 0x02, 0xf2, 0xde, 0x28, 0x74, 0x3c, 0x15, 0x69, 0x3d, 0x6f, 0x23, 0xa8,
	0x5e, 0x20, 0x23, 0x99, 0x31, 0xc8, 0x2e, 0xf6, 0x86, 0x99, 0x38, 0xd2, 0xf8, 0x44, 0x24, 0x75,
	0xde, 0x46, 0x5f, 0x09, 0xb3, 0x9d, 0x51, 0x18, 0xf8, 0x34, 0xf0, 0x67, 0x4c, 0xda, 0x9e, 0x62,
	0x77, 0x46, 0xf3, 0x2c, 0xe6, 0xfb, 0xc6, 0xd5, 0x0a, 0xa6, 0x2d, 0xba, 0x77, 0xed, 0x99, 0x80,
	0x82, 0x52, 0xdf, 0x2a, 0x65, 0xd1, 0xb9, 0xf1, 0xe0, 0x25, 0x55, 0x2d, 0x21, 0xa7, 0x9d, 0x8e,
	0x02, 0xe8, 0x37, 0xe7, 0x79, 0x12, 0x12, 0x87, 0x79, 0xfd, 0x99, 0xc0, 0xe2, 0x7e, 0xac, 0xec,
	0xd1, 0x48, 0x75, 0x37, 0x36, 0xc6, 0xae, 0x60, 0xba, 0xb1, 0x28, 0x3d, 0xb2, 0xf1, 0xe7, 0xa9,
	0xb3, 0xf2, 0x7f, 0x9c, 0xe3, 0xed, 0xea, 0x1f, 0xb9, 0x9e, 0x06, 0xf5, 0x07, 0xd7, 0x16, 0x35,
	0xfe, 0xe2, 0x5a, 0x41, 0x11, 0x72, 0x6e, 0x5e, 0x65, 0x7f, 0x44, 0x56, 0x44, 0x39, 0x50, 0x3f,
	0xbd, 0x87, 0x69, 0x78, 0xd0, 0x9b, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x92, 0x01, 0x56,
	0xef, 0x01, 0x00, 0x00,
}
